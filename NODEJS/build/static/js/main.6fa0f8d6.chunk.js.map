{"version":3,"sources":["Components/Header.js","Components/Home.js","Actions/citizens-action.js","Components/Citizens.js","Reducers/citizens-reducer.js","Reducers/employees-reducer.js","Reducers/announcements-reducer.js","Redux.js","Components/AddCitizen.js","Actions/employees-action.js","Components/AddEmp.js","Components/Employees.js","Actions/announcements-action.js","Components/AddAnnouncements.js","Components/AHOME.js","Components/RHeader.js","Components/AddRequests.js","Components/RHomeData.js","Components/RHOME.js","App.js","Components/login.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Component","Home","addCitizen","citizen","type","payload","Citizens","_this","this","fetch","then","res","text","json","console","log","props","dispatch","data","catch","error","citizensList","citizens","map","index","key","name","cnic","phoneno","flatno","connect","store","citizensReducer","state","arguments","length","undefined","action","concat","Object","toConsumableArray","employeesReducer","announcementsReducer","allReducers","combineReducers","createStore","AddCitizen","handleSubmit","event","preventDefault","refs","value","options","method","body","JSON","stringify","headers","Content-Type","ref","placeholder","required","onClick","addEmp","employee","AddEmp","Eusername","ename","Ecnic","ecnic","Ephoneno","ephoneno","Expert","expert","Employees","employeesList","employees","addAnnouncement","announcement","AddAnnouncements","e","title","announce","onSubmit","rows","cols","AHOME","es","BrowserRouter","Components_Header","Switch","Route","path","component","RHeader","AddRequests","RHomeData","allAnnounce","announcements","RHOME","Components_RHeader","App","Components_AHOME","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fa0f8d6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n\r\n      return (\r\n        <div className=\"header\">\r\n        <h1>Residential Management System</h1>\r\n        <h4>\r\n          \r\n        <Link to=\"/home\">Home </Link>||\r\n        <Link to=\"/addcitizen\"> Add Citizen </Link>||\r\n        <Link to=\"/citizens\"> View Citizens </Link>||\r\n        <Link to=\"/addemp\"> Add Employee </Link>||\r\n        <Link to=\"/employees\"> View employees </Link>||\r\n        <Link to=\"/addannouncements\"> Add Announcements </Link>\r\n\r\n        \r\n        </h4>\r\n        </div>\r\n\r\n      )\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n  export default Header","import React, { Component } from 'react';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n             <center>\r\n                <h3>Home</h3>\r\n            </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home","const setCitizen = ( citizens ) => {\r\n    return { type: \"SET_CITIZEN\", payload: citizens }\r\n}\r\n\r\nconst addCitizen=(citizen)=>{\r\n    return {type:\"ADD_CITIZEN\", payload:citizen}\r\n}\r\nexport {addCitizen,setCitizen}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport './AddCitizen.css';\r\nimport { setCitizen } from '../Actions/citizens-action'\r\nclass Citizens extends Component{\r\n    componentDidMount(){\r\n        fetch('/getCitizen')\r\n                .then((res)=>res.text())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    this.props.dispatch(setCitizen(json.data))\r\n                  })\r\n                .catch((error)=>console.log(error))\r\n    }\r\n    render(){\r\n        const {citizens}=this.props\r\n        const citizensList=citizens.map((citizen,index)=>{\r\n            return <div key={index} className=\"listItem\">\r\n            <li><b>Name:</b> {citizen.name}</li>\r\n            <li><b>CNIC:</b> {citizen.cnic}</li>\r\n            <li><b>Phone#:</b> {citizen.phoneno}</li>\r\n            <li><b>Flat#:</b> {citizen.flatno}</li>\r\n            </div>\r\n        })\r\n        return(\r\n            <div className=\"citizens\">\r\n            <div className=\"output\">\r\n            <h2>Citizens:</h2>\r\n            {citizensList}\r\n            </div>\r\n            {/* <table>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>CNIC#</th>\r\n                    <th>Phone#</th>\r\n                    <th>Flat#</th>\r\n                </tr>\r\n                \r\n            {this.props.citizens.map((citizen,index)=>{\r\n                return <div key={index}>\r\n                    <tr><td>{citizen.name}</td><td>{citizen.cnic}</td><td>{citizen.phoneno}</td><td>{citizen.flatno}</td></tr>\r\n                </div>\r\n            })}\r\n             </table> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return{\r\n        citizens:store.citizensReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Citizens)","const citizensReducer=(state=[],action)=>{\r\n    switch(action.type){\r\n        case \"ADD_CITIZEN\":\r\n        return [...state,action.payload]\r\n        case \"SET_CITIZEN\":\r\n        return action.payload\r\n        default:\r\n        return state\r\n    }\r\n}\r\nexport default citizensReducer\r\n// case \"addCitizen\":\r\n\r\n// var options={\r\n//     method: 'POST',\r\n//     body: JSON.stringify({data: action.payload}),\r\n//     headers: {\r\n//         'Content-Type': 'application/json'\r\n//     }\r\n// }\r\n// fetch('/addCitizen', options)\r\n// .then((res)=>res.text())\r\n// .then((message)=>console.log(message))\r\n// .catch((error)=>console.log(error))","const employeesReducer=(state=[],action)=>{\r\n    switch(action.type){\r\n        case \"ADD_EMPLOYEE\":\r\n            return [...state,action.payload]\r\n        case \"SET_EMPLOYEE\":\r\n        return action.payload\r\n        default:\r\n        return state\r\n    }\r\n}\r\nexport default employeesReducer","const announcementsReducer=(state=[],action)=>{\r\n    switch(action.type){\r\n        case \"ADD_ANNOUNCEMENT\":\r\n        return [...state,action.payload]\r\n        case \"SET_ANNOUNCEMENT\":\r\n        return action.payload\r\n        default:\r\n        return state\r\n    }\r\n}\r\nexport default announcementsReducer","import {createStore,combineReducers} from 'redux'\r\nimport citizensReducer from './Reducers/citizens-reducer'\r\nimport employeesReducer from './Reducers/employees-reducer'\r\nimport announcementsReducer from './Reducers/announcements-reducer'\r\n\r\nlet allReducers=combineReducers({citizensReducer,employeesReducer,announcementsReducer})\r\nlet store=createStore(allReducers)\r\n\r\nexport default store","import React, { Component } from 'react';\r\nimport './AddCitizen.css';\r\nimport {addCitizen} from '../Actions/citizens-action' ;\r\nimport store from '../Redux'\r\nclass AddCitizen extends Component{\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        let name=this.refs.name.value\r\n        let cnic=this.refs.cnic.value\r\n        let phoneno=this.refs.phoneno.value\r\n        let flatno=this.refs.flatno.value\r\n        let citizen={name:name, cnic:cnic, phoneno:phoneno, flatno:flatno}\r\n    \r\n        var options={\r\n            method:'POST',\r\n            body:JSON.stringify({citizen}),\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        fetch('/addCitizen',options)\r\n        .then((res)=>res.text())\r\n        .then((json) => {\r\n            console.log(json)\r\n            this.props.dispatch(addCitizen(json.data))\r\n          })\r\n        .catch((error)=>console.log(error))\r\n        // store.dispatch(addCitizen(citizen))\r\n        // alert('Citizen is Added');\r\n    }\r\n     render(){\r\n        return(\r\n            <div className=\"addcitizen\">\r\n            <h2>Add Citizen</h2>\r\n            <form action=\"/addCitizen\" method=\"POST\">\r\n                <input className=\"input\" type=\"text\" ref=\"name\" placeholder=\"Name\" required=\"required\"/><br/><br/>\r\n                <input className=\"input\" type=\"number\" ref=\"cnic\" placeholder=\"CNIC\" required=\"required\"/><br/><br/>\r\n                <input className=\"input\" type=\"number\" ref=\"phoneno\" placeholder=\"Phone#\" required=\"required\"/><br/><br/>\r\n                <input className=\"input\" type=\"text\" ref=\"flatno\" placeholder=\"Flat Number\" required=\"required\"/><br/><br/>\r\n                <input type=\"submit\" value=\"Add\" onClick={this.handleSubmit} />\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddCitizen","const setEmp = ( employees ) => {\r\n    return { type: \"SET_EMPLOYEE\", payload: employees }\r\n}\r\n\r\nconst addEmp=(employee)=>{\r\n    return{type:\"ADD_EMPLOYEE\",payload:employee}\r\n}\r\nexport {addEmp,setEmp}","import React, { Component } from 'react';\r\nimport './AddCitizen.css';\r\nimport {addEmp} from '../Actions/employees-action'\r\nimport store from '../Redux'\r\nclass AddEmp extends Component{\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        let ename=this.refs.ename.value\r\n        let ecnic=this.refs.ecnic.value\r\n        let ephoneno=this.refs.ephoneno.value\r\n        let expert=this.refs.expert.value\r\n        let employee={Eusername:ename, Ecnic:ecnic, Ephoneno:ephoneno, Expert:expert}\r\n        \r\n        var options={\r\n            method:'POST',\r\n            body:JSON.stringify({employee}),\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        fetch('/addEmp',options)\r\n        .then((res)=>res.text())\r\n        .then((json) => {\r\n            console.log(json)\r\n            this.props.dispatch(addEmp(json.data))\r\n          })\r\n        .catch((error)=>console.log(error))\r\n        // store.dispatch(addEmp(employee))\r\n        // alert(\"Employee is Added\")\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"addemp\">\r\n            <h2>Add Employees</h2>\r\n            <form action=\"/addEmp\" method=\"POST\">\r\n                <input className=\"input\" type=\"text\" ref=\"ename\" placeholder=\"Name\" required=\"required\"/><br/><br/>\r\n                <input className=\"input\" type=\"number\" ref=\"ecnic\" placeholder=\"CNIC\" required=\"required\"/><br/><br/>\r\n                <input className=\"input\" type=\"number\" ref=\"ephoneno\" placeholder=\"Phone#\" required=\"required\"/><br/>\r\n                <h5>Expertations:</h5>\r\n                <select ref=\"expert\">\r\n                    <option>Plumber</option>\r\n                    <option>Electrician</option>\r\n                    <option>Driver</option>\r\n                    <option>Sweeper</option>\r\n                </select><br/><br/>\r\n                <input type=\"submit\" value=\"Add\" onClick={this.handleSubmit} />\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddEmp","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport './AddCitizen.css';\r\nimport {setEmp} from '../Actions/employees-action'\r\nclass Employees extends Component{\r\n    componentDidMount(){\r\n        fetch('/getEmp')\r\n                .then((res)=>res.text())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    this.props.dispatch(setEmp(json.data))\r\n                  })\r\n                .catch((error)=>console.log(error))\r\n    }\r\n    render(){\r\n        const {employees}=this.props\r\n        const employeesList=employees.map((employee,index)=>{\r\n            return <div key={index} className=\"listItem\">\r\n            <li>Name:{employee.ename}</li>\r\n            <li>CNIC#:{employee.ecnic}</li>\r\n            <li>Phone#:{employee.ephoneno}</li>\r\n            <li>Expert:{employee.expert}</li>\r\n            \r\n            </div>\r\n        })\r\n        return(\r\n            <div className=\"employees\">\r\n            <div className=\"output\">\r\n            <h2>Employees:</h2>\r\n            {employeesList}\r\n            </div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return{\r\n    employees:store.employeesReducer\r\n}\r\n}\r\nexport default connect(mapStateToProps)(Employees)","const setAnnouncement = ( announcements ) => {\r\n    return { type: \"SET_ANNOUNCEMENT\", payload: announcements }\r\n}\r\n\r\n\r\nconst addAnnouncement=(announcement)=>{\r\n    return {type:\"ADD_ANNOUNCEMENT\",payload:announcement}\r\n\r\n}\r\nexport {addAnnouncement,setAnnouncement}","import React, { Component } from 'react';\r\nimport './AddCitizen.css';\r\nimport {addAnnouncement} from '../Actions/announcements-action'\r\nimport store from '../Redux'\r\nclass AddAnnouncements extends Component{\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        let title=this.refs.title.value\r\n        let announce=this.refs.announce.value\r\n        let announcement=[{title:title, announce:announce}]\r\n        \r\n        var options={\r\n            method:'POST',\r\n            body:JSON.stringify({announcement}),\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        fetch('/addAnn',options)\r\n        .then((res)=>res.text())\r\n        .then((json) => {\r\n            console.log(json)\r\n            this.props.dispatch(addAnnouncement(json.data))\r\n          })\r\n        .catch((error)=>console.log(error))\r\n        // store.dispatch(addAnnouncement(announcement))\r\n        // alert(\"Announcement Added\")\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"addannouncements\">\r\n            <h2>Add Announcements</h2>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input className=\"input\" type=\"text\" ref=\"title\" placeholder=\"Title Here...\" required=\"required\"/><br/><br/>\r\n                <textarea className=\"input\" rows=\"7\" cols=\"70\" ref=\"announce\" placeholder=\"Announcement...\"></textarea><br/><br/>\r\n                <input type=\"submit\" value=\"Add\" />\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddAnnouncements","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Home from './Home'\r\nimport Citizens from './Citizens'\r\nimport AddCitizen from './AddCitizen'\r\nimport AddEmp from './AddEmp'\r\nimport Employees from './Employees'\r\nimport AddAnnouncements from './AddAnnouncements'\r\nimport { Provider } from 'react-redux'\r\nimport store from '../Redux'\r\nclass AHOME extends Component {\r\n    render() {\r\n      return (\r\n        <Provider store={store}>\r\n        <BrowserRouter>\r\n        <div className=\"ahome\">\r\n          <Header/>\r\n          <Switch>\r\n           \r\n           \r\n            <Route path=\"/home\" component={Home} />\r\n            <Route path=\"/citizens\" component={Citizens} />\r\n            <Route path=\"/addcitizen\" component={AddCitizen} />\r\n            <Route path=\"/addemp\" component={AddEmp}/>\r\n            <Route path=\"/employees\" component={Employees}/>\r\n            <Route path=\"/addannouncements\" component={AddAnnouncements}/>\r\n            \r\n\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n        </BrowserRouter>\r\n        </Provider>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default AHOME;\r\n  ","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass RHeader extends Component {\r\n\r\n    render() {\r\n\r\n      return (\r\n        <div className=\"header\">\r\n        <h1>Residential Management System</h1>\r\n        <h4>\r\n        <Link to=\"/rhomedata\">Home</Link>||\r\n        <Link to=\"/addrequests\">Send Request</Link>\r\n        </h4>\r\n        </div>\r\n\r\n      )\r\n  \r\n    }\r\n  \r\n  }\r\n\r\n  export default RHeader","import React, { Component } from 'react';\r\nimport './AddCitizen.css';\r\n\r\nclass AddRequests extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"addrequests\">\r\n             <h2>Send Request</h2>\r\n             <form>\r\n                <input className=\"input\" type=\"text\" ref=\"title\" placeholder=\"Title Here...\" required=\"required\"/><br/><br/>\r\n                <textarea className=\"input\" rows=\"7\" cols=\"70\" placeholder=\"Type Here...\"></textarea><br/><br/>\r\n                <input type=\"submit\" value=\"Send\" onClick={this.handleSubmit} />\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddRequests","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { connect } from 'react-redux'\r\n\r\nclass RHomeData extends Component{\r\n    render(){\r\n        const {announcements}=this.props\r\n        const allAnnounce=announcements.map((announcement,index)=>{\r\n            return <div key={index}>\r\n            <li>Title:{announcement[0].title}</li>\r\n            <li>Announcement:{announcement[1].announce}</li>\r\n            </div> \r\n            })\r\n        return(\r\n            <div className=\"\">\r\n            <div className=\"out\">\r\n            <h2>Announcements</h2>\r\n           {allAnnounce}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return {\r\n        announcements:store.announcementsReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(RHomeData)\r\n\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from '../Redux'\r\nimport RHeader from './RHeader'\r\nimport AddRequests from './AddRequests'\r\nimport RHomeData from './RHomeData'\r\nimport {setAnnouncement} from '../Actions/announcements-action'\r\nclass RHOME extends Component{\r\n    componentDidMount(){\r\n        fetch('/getAnn')\r\n        .then((res)=>res.text())\r\n        .then((json) => {\r\n            console.log(json)\r\n            this.props.dispatch(setAnnouncement(json.data))\r\n          })\r\n        .catch((error)=>console.log(error))\r\n    }\r\n    render(){\r\n        const {announcements}=this.props\r\n        const allAnnounce=announcements.map((announcement,index)=>{\r\n            return <div key={index}>\r\n            <li>Title:{announcement[0].title}</li>\r\n            <li>Announcement:{announcement[1].announce}</li>\r\n            </div> \r\n            })\r\n        \r\n        return(\r\n            <Provider store={store}>\r\n            <BrowserRouter>\r\n            <div className=\"rhome\">\r\n            <RHeader/>\r\n              <Switch>\r\n               <Route path=\"/addrequests\" component={AddRequests}/>\r\n               {/* <Route path=\"/rhomedata\" component={RHomeData}/> */}\r\n               {/* <Route path=\"/\" component={RHomeData}/> */}\r\n              </Switch>\r\n              <div className=\"out\">\r\n            <h2>Announcements</h2>\r\n           {allAnnounce}\r\n            </div>\r\n          \r\n            </div>\r\n            </BrowserRouter>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(store)=>{\r\n    return {\r\n        announcements:store.announcementsReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(RHOME)","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n// import Header from './Components/Header'\n// import Home from './Components/Home'\n// import Citizens from './Components/Citizens'\n// import AddCitizen from './Components/AddCitizen'\n// import AddEmp from './Components/AddEmp'\n// import Employees from './Components/Employees'\n// import AddAnnouncements from './Components/AddAnnouncements'\nimport AHOME from './Components/AHOME'\nimport { Provider } from 'react-redux'\nimport store from './Redux'\nimport RHOME from './Components/RHOME'\nimport Login from './Components/login'\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n      <div className=\"App\">\n        {/* <Header/> */}\n        <Switch>\n          <AHOME/>\n          {/* <Login/> */}\n         \n          {/* <Route path=\"/home\" component={Home} />\n          <Route path=\"/citizens\" component={Citizens} />\n          <Route path=\"/addcitizen\" component={AddCitizen} />\n          <Route path=\"/addemp\" component={AddEmp}/>\n          <Route path=\"/employees\" component={Employees}/>\n          <Route path=\"/addannouncements\" component={AddAnnouncements}/>\n          <Route path=\"/\" component={Home} /> */}\n        </Switch>\n      </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport './AddCitizen.css';\r\nclass Login extends Component{\r\n    componentDidMount(){\r\n        fetch('/login')\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"loginform\">\r\n            <div className=\"header\">\r\n            <h1>Residential Management System</h1>\r\n            </div>\r\n\r\n            <div className=\"login\">\r\n            <h2>Log In Form</h2>\r\n            <form action=\"/login\" method=\"POST\">\r\n                <input className=\"input\" type=\"text\" ref=\"lusername\" placeholder=\"Username\" required=\"required\"/><br/><br/>\r\n                <input className=\"input\" type=\"password\" ref=\"pass\" placeholder=\"Password\" required=\"required\"/><br/><br/>\r\n                <input type=\"submit\" value=\"Log In\"/>\r\n            </form>\r\n            </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}